{"ast":null,"code":"var _jsxFileName = \"/Users/adavila/Documents/work/occam/dev/postgres_python/react-crud/src/components/manipulators/UpdateData.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Option from \"../Option\";\nimport comments from \"../../services/comments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UpdateData = ({\n  library\n}) => {\n  _s();\n  const [id, setId] = useState('');\n  const [owner, setOwner] = useState('');\n  const [content, setContent] = useState('');\n  const [data, setData] = useState([]);\n  const [important, setImportant] = useState(false);\n  useEffect(() => {\n    let tempId;\n    // Get all notes to display ids in dropdown\n    comments.getAll(library).then(response => {\n      setData(response);\n      if (response.length > 0) {\n        tempId = response[0].id;\n        setId(response[0].id);\n        // Add value to input fields\n        setOwner(response[0].owner);\n        setContent(response[0].content);\n        setImportant(response[0].important === 't' ? true : false);\n      }\n    }).catch(error => {\n      console.log(\"So you thought\", error);\n    });\n  }, []);\n  const updateData = event => {\n    event.preventDefault();\n    if (owner.length < 1) {\n      alert('No name has been provided!');\n      return null;\n    }\n    if (content.length < 1) {\n      alert('Are you sure you want to send an empty note?');\n      return null;\n    }\n    const newComment = {\n      owner: owner,\n      content: content,\n      important: important\n    };\n    comments.updateComment(id, newComment, library).then(updatedResponse => {\n      // Do something\n      alert(`Updated item ${id}!`);\n      // Update list of items\n      setData(data.map(c => c.id !== id ? c : updatedResponse));\n      console.log('resposne', updatedResponse);\n    });\n  };\n  const handleOwner = event => {\n    setOwner(event.target.value);\n  };\n  const handleContent = event => {\n    setContent(event.target.value);\n  };\n  const handleImportant = event => {\n    setImportant(!important);\n  };\n  const handleIdSelect = event => {\n    setId(event.target.value);\n    const selected = data.filter(element => Number(element.id) === Number(event.target.value)).map(filteredElement => filteredElement);\n\n    // Add value to input fields\n    setOwner(selected[0].owner);\n    setContent(selected[0].content);\n    setImportant(selected[0].important === 't' ? true : false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleIdSelect,\n      value: id,\n      children: data.map(element => {\n        return /*#__PURE__*/_jsxDEV(Option, {\n          data: element\n        }, element.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateData,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: owner,\n        onChange: handleOwner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: content,\n        onChange: handleContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), \"Important\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        value: \"Important\",\n        checked: important === true,\n        onClick: handleImportant,\n        onChange: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(UpdateData, \"19PpmLLBp5elj77XVwuSK8KG380=\");\n_c = UpdateData;\nexport default UpdateData;\nvar _c;\n$RefreshReg$(_c, \"UpdateData\");","map":{"version":3,"names":["useEffect","useState","Option","comments","jsxDEV","_jsxDEV","Fragment","_Fragment","UpdateData","library","_s","id","setId","owner","setOwner","content","setContent","data","setData","important","setImportant","tempId","getAll","then","response","length","catch","error","console","log","updateData","event","preventDefault","alert","newComment","updateComment","updatedResponse","map","c","handleOwner","target","value","handleContent","handleImportant","handleIdSelect","selected","filter","element","Number","filteredElement","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","checked","onClick","_c","$RefreshReg$"],"sources":["/Users/adavila/Documents/work/occam/dev/postgres_python/react-crud/src/components/manipulators/UpdateData.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Option from \"../Option\";\nimport comments from \"../../services/comments\";\n\n\nconst UpdateData = ({library} : any) => {\n    const [id, setId] = useState('');\n    const [owner, setOwner] = useState('');\n    const [content, setContent] = useState('');\n    const [data, setData] = useState<any[]>([])\n    const [important, setImportant] = useState(false);\n\n    useEffect(() => {\n        let tempId:string;\n        // Get all notes to display ids in dropdown\n        comments\n            .getAll(library)\n            .then(response => {\n                setData(response)\n                if (response.length > 0) {\n                    tempId = response[0].id\n                    setId(response[0].id)\n                    // Add value to input fields\n                    setOwner(response[0].owner)\n                    setContent(response[0].content)\n                    setImportant(response[0].important === 't' ? true : false)\n                } \n            })\n            .catch(error => {\n                console.log(\"So you thought\", error)\n            })\n\n    }, [])\n\n    const updateData = (event : any) => {\n        event.preventDefault()\n\n        if (owner.length < 1) {\n            alert('No name has been provided!')\n            return null\n        }\n        if (content.length < 1) {\n            alert('Are you sure you want to send an empty note?')\n            return null\n        }\n        const newComment = {\n            owner: owner,\n            content: content,\n            important: important\n        }\n\n        comments\n            .updateComment(id, newComment, library)\n            .then(updatedResponse => {\n                // Do something\n                alert(`Updated item ${id}!`)\n                // Update list of items\n                setData(data.map(c => c.id !== id ? c : updatedResponse))\n                console.log('resposne', updatedResponse)\n            })\n    }\n\n    const handleOwner = (event : any) => {\n        setOwner(event.target.value)\n    }\n    const handleContent = (event : any) => {\n        setContent(event.target.value)\n    }\n    const handleImportant = (event : any) => {\n        setImportant(!important)\n    }\n    const handleIdSelect = (event : any) => {\n        setId(event.target.value)\n        \n        const selected = data.filter((element : any) => Number(element.id) === Number(event.target.value)).map((filteredElement) => filteredElement)\n        \n        // Add value to input fields\n        setOwner(selected[0].owner)\n        setContent(selected[0].content)\n        setImportant(selected[0].important === 't' ? true : false)\n    }\n    \n    return (\n        <>\n            <select onChange={handleIdSelect} value={id}>\n                {data.map(element => {\n                    return <Option key={element.id} data={element} />\n                })}\n            </select>\n            <form onSubmit={updateData}>\n                <p>Name</p>\n                <input\n                    value={owner}\n                    onChange={handleOwner}\n                />\n                <br />\n                <p>Content:</p>\n                <input\n                    value={content}\n                    onChange={handleContent}\n                />\n                <br />\n                <br />\n                Important\n                <input\n                    type=\"radio\"\n                    value={\"Important\"}\n                    checked={important === true}\n                    onClick={handleImportant}\n                    onChange={() => {}}\n                />\n                <button type=\"submit\">Update</button>\n            </form>\n        </>\n    )\n}\n\nexport default UpdateData;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}